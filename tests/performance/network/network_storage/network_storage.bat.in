@echo off
rem Copyright (c) 2014 John Biddiscombe
rem
rem Distributed under the Boost Software License, Version 1.0. (See accompanying
rem file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

rem #
rem # Windows only batch script for running the test.
rem # Run this script with a single argument N = number of tasks to spawn.
rem # All tasks are spawned on the local machine, this should not be used 
rem # for benchmarking, only testing.
rem #

echo "you may need to hand edit the lib path if the executable fails to run"
Path=@LIB_PATH@
rem cd /d d:\build\hpx

rem Get N-1 from argument
set /a N=%1-1

rem
rem for a single process we can perform a range of tests
rem
rem FOR %%b IN (64 128 256 512 1024 2048 4096 8192 16384 32768 65536) DO (
rem   FOR /l %%t IN (1, 1, 12) DO (
    echo "Starting %1 instances as part of HPX job"
    FOR /l %%x IN (0, 1, %N%) DO (
      rem use "start /B" to suppress new window per task 
      start /B /WAIT D:\build\hpx\Debug\bin\network_storage.exe -l%1 -%%x -Ihpx.parcel.tcp.enable=1 -Ihpx.parcel.async_serialization=1 --hpx:threads=%%t --localMB=512 --transferKB=%%b --iterations=5
    )
rem   )
rem )
 
rem 2097152 65536
rem
rem --hpx:debug-clp  
rem --hpx:list-component-types
rem --hpx:threads=2 
rem  -Ihpx.parcel.async_serialization=0
rem  -Ihpx.parcel.tcp.enable=1  
rem  -Ihpx.parcel.bootstrap=mpi 
rem  -Ihpx.agas.max_pending_refcnt_requests=0
rem  -Ihpx.threadpools.parcel_pool_size=2
rem  -Ihpx.parcel.async_serialization=1 
rem 
rem parcelport debug
rem
rem --hpx:print-counter /parcelport{locality#*/total}/count/mpi/cache-evictions 
rem --hpx:print-counter /parcelport{locality#*/total}/count/mpi/cache-hits 
rem --hpx:print-counter /parcelport{locality#*/total}/count/mpi/cache-insertions 
rem --hpx:print-counter /parcelport{locality#*/total}/count/mpi/cache-misses 
rem --hpx:print-counter /parcelport{locality#*/total}/count/mpi/cache-reclaims 
rem 
rem threads debug
rem
rem --hpx:print-counter /threads{locality#*/total}/count/objects 
rem --hpx:print-counter /threads{locality#*/total}/count/cumulative 
rem --hpx:print-counter /threads{locality#*/total}/idle-rate
rem 
rem serialize debug
rem
rem --hpx:print-counter /serialize{locality#*/total}/count/mpi/sent --hpx:print-counter /serialize{locality#*/total}/count/mpi/received
rem --hpx:print-counter /serialize{locality#*/total}/time/mpi/sent --hpx:print-counter /serialize{locality#*/total}/time/mpi/received
rem --hpx:print-counter /serialize{locality#*/total}/*/mpi/*